generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

generator giraphql {
  provider = "prisma-giraphql-types"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id             String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  username       String    @unique(map: "username_1")
  name           String
  hashedPassword Bytes
  createdAt      DateTime  @default(now()) @db.Date
  updatedAt      DateTime  @updatedAt @db.Date
  sessions       Session[]
}

model Session {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  expiresAt DateTime @db.Date
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

enum ExerciseType {
  AEROBIC
  STRENGTH
}

enum MuscleGroup {
  ARMS
  SHOULDERS
  CHEST
  BACK
  LEGS
}

model Exercise {
  id          String       @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name        String       @unique(map: "name_1")
  type        ExerciseType
  muscleGroup MuscleGroup?
  createdAt   DateTime     @default(now()) @db.Date
  updatedAt   DateTime     @updatedAt @db.Date
}

enum WorkoutStatus {
  DRAFTED
  NONE
}

// model workoutexercises {
//   id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
//   createdAt DateTime @db.Date
//   createdBy String   @db.ObjectId
//   exercise  String   @db.ObjectId
//   sets      Json[]
//   updatedAt DateTime @db.Date
//   workout   String   @db.ObjectId
// }

// model workouts {
//   id               String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
//   createdAt        DateTime  @db.Date
//   createdBy        String    @db.ObjectId
//   doneAt           DateTime? @db.Date
//   name             String
//   status           String
//   updatedAt        DateTime  @db.Date
//   workoutExercises String[]  @db.ObjectId
// }
